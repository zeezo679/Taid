@using Demo.Models.Entities
@model List<Course>

@if (Model != null && Model.Any())
{
    <div class="row g-3">
        <div class="col-12">
            <select class="form-select" name="departmentCourses" id="departmentCourses">
                <option value="" disabled selected>Select a course from this department</option>
                @foreach (var course in Model)
                {
                    <option value="@course.Id" data-degree="@course.Degree" data-mindegree="@course.MinDegree">
                        @course.Name (Degree: @course.Degree - @course.MinDegree)
                    </option>
                }
            </select>
        </div>
        
        <div class="col-12">
            <div class="d-flex align-items-center justify-content-between">
                <small class="text-muted d-flex align-items-center">
                    <i data-feather="info" class="icon-sm me-1"></i>
                    Found @Model.Count course(s) in this department
                </small>
                <button type="button" class="btn btn-sm btn-outline-secondary" onclick="hideCourses()">
                    <i data-feather="x" class="icon-sm me-1"></i>
                    Hide
                </button>
            </div>
        </div>
        
        @* Display course details in a nice grid *@
        <div class="col-12 mt-3">
            <div class="row g-2">
                @foreach (var course in Model.Take(3))
                {
                    <div class="col-md-4">
                        <div class="card border-0 bg-white shadow-sm">
                            <div class="card-body p-3">
                                <h6 class="card-title mb-2 text-primary">@course.Name</h6>
                                <div class="d-flex justify-content-between">
                                    <small class="text-muted">Max: @course.Degree</small>
                                    <small class="text-muted">Min: @course.MinDegree</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.Count > 3)
                {
                    <div class="col-md-4">
                        <div class="card border-0 bg-light">
                            <div class="card-body p-3 text-center">
                                <span class="text-muted">+@(Model.Count - 3) more courses</span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-info d-flex align-items-center">
        <i data-feather="info" class="me-2"></i>
        <div>
            <strong>No courses found</strong><br>
            <small>This department doesn't have any courses assigned yet.</small>
        </div>
    </div>
}

<script>
    // Course selection handler
    document.getElementById('departmentCourses')?.addEventListener('change', function() {
        const selectedOption = this.options[this.selectedIndex];
        const degree = selectedOption.getAttribute('data-degree');
        const minDegree = selectedOption.getAttribute('data-mindegree');
        
        // You can add logic here to update other parts of the form
        console.log('Selected course:', this.value, 'Degree range:', minDegree, '-', degree);
    });
</script>