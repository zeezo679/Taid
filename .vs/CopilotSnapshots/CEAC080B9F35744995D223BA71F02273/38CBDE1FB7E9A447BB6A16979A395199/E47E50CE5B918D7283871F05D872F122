@using Demo.Models.Entities
@model List<Course>

@{
    var courses = Model;
}

<div class="container-fluid px-4 py-4">
    <!-- Bootstrap Alert Example -->
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i data-feather="check-circle" class="me-2 icon-sm"></i>
            @TempData["Message"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Header with Bootstrap -->
    <div class="row align-items-center mb-4">
        <div class="col-md-8">
            <div class="d-flex align-items-center">
                <div class="p-3 bg-purple-100 rounded-3 me-3">
                    <i data-feather="book-open" class="text-purple-600 icon-lg"></i>
                </div>
                <div>
                    <h1 class="h2 mb-1 fw-bold">Courses</h1>
                    <p class="text-muted mb-0">Manage and organize your educational courses</p>
                </div>
            </div>
        </div>
        @if(User.IsInRole("Instructor"))
        {
            <div class="col-md-4 text-md-end">
                <a asp-action="addCourse" asp-controller="Course"
                   class="btn btn-primary btn-lg">
                    <i data-feather="plus" class="me-2 icon-sm"></i>
                    Add New Course
                </a>
            </div>
        }
       
    </div>

    <!-- AJAX Details Container with smooth animation -->
    <div class="mb-4">
        <div id="CourseDetails" class="border  rounded-3 p-3">
            <!-- AJAX content will be loaded here -->
        </div>
    </div>

    <!-- Course Cards using Bootstrap -->
    <div class="row g-4">
        @foreach(var course in courses)
        {
            <div class="col-lg-6 col-xl-4">
                <div class="card h-100 shadow-sm border-0 rounded-3 overflow-hidden">
                    <!-- Purple Header -->
                    <div class="card-header bg-primary text-white p-4">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <small class="text-white-50 text-uppercase fw-semibold">Course</small>
                                <h5 class="card-title mt-2 mb-0 text-white fw-bold">
                                    <a href="#" class="text-white text-decoration-none">
                                        @course.Name
                                    </a>
                                </h5>
                            </div>
                            <span class="badge bg-light text-primary rounded-pill">
                                ID: @course.Id
                            </span>
                        </div>
                    </div>

                    <div class="card-body p-4">
                        <!-- Department -->
                        <div class="mb-3">
                            <small class="text-muted text-uppercase fw-semibold">Department</small>
                            <div class="fw-bold text-primary">@course.Department.Name</div>
                        </div>

                        <!-- Degrees Row -->
                        <div class="row g-3 mb-3">
                            <div class="col-6">
                                <div class="bg-light rounded-2 p-3 text-center">
                                    <small class="text-muted d-block">Max Degree</small>
                                    <span class="h5 fw-bold text-primary mb-0">@course.Degree</span>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="bg-light rounded-2 p-3 text-center">
                                    <small class="text-muted d-block">Min Degree</small>
                                    <span class="h5 fw-bold text-primary mb-0">@course.MinDegree</span>
                                </div>
                            </div>
                        </div>

                        <!-- Instructors -->
                        <div class="mb-4">
                            @{
                                var instructors = (IEnumerable<dynamic>)ViewBag.Instructors ?? Enumerable.Empty<dynamic>();
                                var filteredInstructors = instructors.Where(i => i.CourseId == course.Id);
                                var theirCount = filteredInstructors.Count();
                            }
                            
                            <small class="text-muted text-uppercase fw-semibold">Instructors</small>
                            <div class="d-flex align-items-center mt-1">
                                <span class="badge bg-primary rounded-pill me-2">@theirCount</span>
                                <span class="text-muted">Total Assigned</span>
                            </div>
                            
                            @if (theirCount > 0)
                            {
                                <div class="mt-2">
                                    @foreach(var instructor in filteredInstructors.Take(3))
                                    {
                                        <span class="badge bg-light text-dark me-1 mb-1">@instructor.Name</span>
                                    }
                                    @if (theirCount > 3)
                                    {
                                        <span class="badge bg-secondary">+@(theirCount - 3) more</span>
                                    }
                                </div>
                            }
                            else
                            {
                                <small class="text-muted fst-italic">No instructors assigned</small>
                            }
                        </div>
                    </div>

                    <!-- Card Footer with Actions -->
                    <div class="bg-transparent p-4 pt-0">
                        <div class="d-grid gap-2">
                            <div class="btn-group" role="group">
                                @if (User.IsInRole("Instructor"))
                                {
                                    <a asp-action="edit" asp-controller="course" asp-route-id="@course.Id"
                                       class="btn btn-outline-primary">
                                        <i data-feather="edit-2" class="me-1 icon-sm"></i>
                                        Edit
                                    </a>
                                }
              
                                <button onclick="GetData(@course.Id)" 
                                        class="btn btn-primary">
                                    <i data-feather="eye" class="me-1 icon-sm"></i>
                                    View Details
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Empty State with Bootstrap -->
    @if (!courses.Any())
    {
        <div class="text-center py-5">
            <div class="mx-auto mb-4" style="width: 80px; height: 80px;">
                <div class="bg-light rounded-circle d-flex align-items-center justify-content-center h-100">
                    <i data-feather="book-open" class="text-muted" style="width: 40px; height: 40px;"></i>
                </div>
            </div>
            <h3 class="h4 mb-3">No courses found</h3>
            <p class="text-muted mb-4">Get started by adding your first course to the system.</p>
            <a asp-action="addCourse" asp-controller="Course" 
               class="btn btn-primary btn-lg">
                <i data-feather="plus" class="me-2 icon-sm"></i>
                Add Your First Course
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        function GetData(id) {
            event.preventDefault();
            console.log("Loading course details for ID:", id);

            const detailsContainer = document.getElementById("CourseDetails");
            
            // Hide the container first if it's visible
            if (detailsContainer.classList.contains('show')) {
                detailsContainer.classList.remove('show');
                
                // Wait for hide animation to complete before loading new content
                setTimeout(() => {
                    loadCourseDetails(id, detailsContainer);
                }, 200);
            } else {
                loadCourseDetails(id, detailsContainer);
            }
        }

        function loadCourseDetails(id, container) {
            // Show loading state
            container.classList.add('loading');
            container.innerHTML = `
                <div class="text-center p-4">
                    <div class="loading-spinner me-2"></div>
                    <span class="text-muted">Loading course details...</span>
                </div>
            `;
            
            // Make container visible with loading state
            container.classList.add('show');

            // AJAX call
            $.ajax({
                url: "course/coursedetails/" + id,
                success: function(result) {
                    console.log("Course details loaded successfully");
                    
                    // Remove loading state and add content
                    container.classList.remove('loading');
                    container.innerHTML = result;
                    
                    // Re-initialize feather icons for the new content
                    feather.replace();
                    
                },
                error: function(xhr, status, error) {
                    console.error("Error loading course details:", error);
                    container.classList.remove('loading');
                    container.innerHTML = `
                        <div class="alert alert-danger text-center">
                            <i data-feather="alert-circle" class="me-2"></i>
                            Error loading course details. Please try again.
                            <button class="btn btn-sm btn-outline-danger ms-2" onclick="hideCourseDetails()">
                                <i data-feather="x" class="me-1"></i>Close
                            </button>
                        </div>
                    `;
                    feather.replace();
                }
            });
        }

        function hideCourseDetails() {
            const detailsContainer = document.getElementById("CourseDetails");
            detailsContainer.classList.remove('show');
        }

        // Add close button functionality to the details container
        function addCloseButton() {
            const detailsContainer = document.getElementById("CourseDetails");
            if (detailsContainer.classList.contains('show') && !detailsContainer.querySelector('.close-details-btn')) {
                const closeBtn = document.createElement('button');
                closeBtn.className = 'btn btn-sm btn-outline-secondary close-details-btn position-absolute top-0 end-0 m-2';
                closeBtn.innerHTML = '<i data-feather="x" class="icon-sm"></i>';
                closeBtn.onclick = hideCourseDetails;
                detailsContainer.style.position = 'relative';
                detailsContainer.appendChild(closeBtn);
                feather.replace();
            }
        }

        // Initialize icons after page load
        feather.replace();
        
        // Auto-hide alerts after 5 seconds
        setTimeout(function() {
            $('.alert').alert('close');
        }, 5000);
        
        // Add fade in animation to cards with staggered timing
        document.querySelectorAll('.card').forEach((card, index) => {
            card.classList.add('animate-fade-in');
            card.style.animationDelay = `${index * 0.1}s`;
        });

        // Add smooth scroll to details when they appear
        document.addEventListener('DOMContentLoaded', function() {
            const observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.target.id === 'CourseDetails' && 
                        mutation.target.classList.contains('show')) {
                        // Smooth scroll to the details
                        setTimeout(() => {
                            mutation.target.scrollIntoView({ 
                                behavior: 'smooth', 
                                block: 'nearest' 
                            });
                            addCloseButton();
                        }, 300);
                    }
                });
            });

            observer.observe(document.getElementById('CourseDetails'), {
                attributes: true,
                attributeFilter: ['class']
            });
        });
    </script>
}
